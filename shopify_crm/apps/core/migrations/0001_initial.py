# Generated by Django 4.2.6 on 2023-10-30 06:44

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="OptionProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("option1", models.CharField(max_length=30)),
            ],
            options={"db_table": "option_product",},
        ),
        migrations.CreateModel(
            name="Price",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("currency_code", models.CharField(max_length=15)),
                ("amount", models.CharField(max_length=30)),
            ],
            options={"db_table": "price",},
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=150)),
                (
                    "status",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "draft"), (1, "active"), (2, "archived")],
                        null=True,
                    ),
                ),
                ("body_html", models.CharField(blank=True, max_length=150, null=True)),
                ("handle", models.CharField(blank=True, max_length=150, null=True)),
                ("options", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "product_type",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "published_scope",
                    models.IntegerField(
                        blank=True, choices=[(0, "global"), (1, "web")], null=True
                    ),
                ),
                ("tags", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "template_suffix",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "product_variants",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("vendor", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "created_at",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 10, 30, 6, 44, 38, 430034)
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 10, 30, 6, 44, 38, 430054)
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 10, 30, 6, 44, 38, 430059)
                    ),
                ),
            ],
            options={"db_table": "product",},
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_link", models.CharField(max_length=150)),
            ],
            options={"db_table": "product_image_shopify",},
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("barcode", models.CharField(max_length=150)),
                (
                    "compare_at_price",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 10, 30, 6, 44, 38, 430663)
                    ),
                ),
                (
                    "fulfillment_service",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("grams", models.IntegerField(blank=True)),
                ("inventory_item", models.IntegerField(default=0)),
                (
                    "inventory_management",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "inventory_policy",
                    models.IntegerField(blank=True, choices=[(0, "deny")], null=True),
                ),
                (
                    "inventory_quantity",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                ("position", models.IntegerField(blank=True, default=0, null=True)),
                ("price", models.CharField(blank=True, max_length=150, null=True)),
                ("sku", models.CharField(blank=True, max_length=150, null=True)),
                ("taxable", models.BooleanField(blank=True)),
                ("tax_code", models.CharField(blank=True, max_length=150, null=True)),
                ("title", models.CharField(max_length=150)),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 10, 30, 6, 44, 38, 430755)
                    ),
                ),
                ("weight", models.IntegerField(blank=True, default=0, null=True)),
                ("weight_unit", models.CharField(max_length=150)),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.productimage",
                    ),
                ),
                (
                    "option",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.optionproduct",
                    ),
                ),
                (
                    "product_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.product"
                    ),
                ),
            ],
            options={"db_table": "product_variant",},
        ),
        migrations.AddField(
            model_name="product",
            name="image",
            field=models.ManyToManyField(to="core.productimage"),
        ),
        migrations.CreateModel(
            name="PresentmentPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "compare_at_price",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cpprice",
                        to="core.price",
                    ),
                ),
                (
                    "price",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pprice",
                        to="core.price",
                    ),
                ),
                (
                    "product_variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.productvariant",
                    ),
                ),
            ],
            options={"db_table": "presentment_price",},
        ),
    ]
